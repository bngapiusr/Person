// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PersonDemo.Data;
using System;

namespace PersonDemo.Data.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonDemo.DomainClasses.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<string>("ContactTitle");

                    b.Property<int>("PersonInfoId");

                    b.HasKey("CustomerId");

                    b.HasIndex("PersonInfoId")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PersonDemo.DomainClasses.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("HireDate");

                    b.Property<int>("PersonInfoId");

                    b.Property<string>("Title");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PersonInfoId")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PersonDemo.DomainClasses.PersonInfo", b =>
                {
                    b.Property<int>("PersonInfoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.HasKey("PersonInfoId");

                    b.ToTable("PersonInfo");
                });

            modelBuilder.Entity("PersonDemo.DomainClasses.Customer", b =>
                {
                    b.HasOne("PersonDemo.DomainClasses.PersonInfo", "PersonInfo")
                        .WithOne("Customer")
                        .HasForeignKey("PersonDemo.DomainClasses.Customer", "PersonInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonDemo.DomainClasses.Employee", b =>
                {
                    b.HasOne("PersonDemo.DomainClasses.PersonInfo", "PersonInfo")
                        .WithOne("Employee")
                        .HasForeignKey("PersonDemo.DomainClasses.Employee", "PersonInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
